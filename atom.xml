<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Prodigal&#39;Blog</title>
  
  <subtitle>Do what I wang do!</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://henuajy.top/"/>
  <updated>2019-05-17T14:28:28.088Z</updated>
  <id>https://henuajy.top/</id>
  
  <author>
    <name>Prodigal</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android使用OkHttp实现登录注册功能</title>
    <link href="https://henuajy.top/2019/05/17/Android%E4%BD%BF%E7%94%A8OkHttp%E5%AE%9E%E7%8E%B0%E7%99%BB%E5%BD%95%E6%B3%A8%E5%86%8C%E5%8A%9F%E8%83%BD/"/>
    <id>https://henuajy.top/2019/05/17/Android使用OkHttp实现登录注册功能/</id>
    <published>2019-05-17T14:26:55.000Z</published>
    <updated>2019-05-17T14:28:28.088Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;客户端&quot;&gt;&lt;a href=&quot;#客户端&quot; class=&quot;headerlink&quot; title=&quot;客户端&quot;&gt;&lt;/a&gt;客户端&lt;/h3&gt;&lt;p&gt;在客户端，这里将登录和注册放在了同一个界面，在账号和密码两个EditText中输入内容后，按下LOGIN按钮，进行登录；按下REGISTER按钮，进行注册。&lt;br&gt;在写代码之前，先添加OkHttp的依赖:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;implementation &#39;com.squareup.okhttp3:okhttp:3.4.1&#39;//这里3.4.1是笔者使用的okhttp版本号，可以自行更改至最新版本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;，注册网络权限:&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;uses-permission&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;android:name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.INTERNET&quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="Android" scheme="https://henuajy.top/tags/Android/"/>
    
      <category term="Servlet" scheme="https://henuajy.top/tags/Servlet/"/>
    
      <category term="OkHttp" scheme="https://henuajy.top/tags/OkHttp/"/>
    
  </entry>
  
  <entry>
    <title>Android中的文件存储</title>
    <link href="https://henuajy.top/2019/05/16/Android%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6%E5%AD%98%E5%82%A8/"/>
    <id>https://henuajy.top/2019/05/16/Android中的文件存储/</id>
    <published>2019-05-16T13:21:34.000Z</published>
    <updated>2019-05-16T13:24:38.679Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、前言&quot;&gt;&lt;a href=&quot;#一、前言&quot; class=&quot;headerlink&quot; title=&quot;一、前言&quot;&gt;&lt;/a&gt;一、前言&lt;/h3&gt;&lt;p&gt;文件存储时Android中最基本的一种数据存储方式，它不对存储的内容进行任何的格式化处理，所有数据都是原封不动地保存到文件当中的，因此它比较适合用于存储一些简单的文本数据或二进制数据。&lt;/p&gt;
&lt;h3 id=&quot;二、将数据存储到文件中&quot;&gt;&lt;a href=&quot;#二、将数据存储到文件中&quot; class=&quot;headerlink&quot; title=&quot;二、将数据存储到文件中&quot;&gt;&lt;/a&gt;二、将数据存储到文件中&lt;/h3&gt;&lt;p&gt;Context类中提供了一个openFileOutput()方法，可以用于将数据存储到指定的文件中。
    
    </summary>
    
      <category term="Notes" scheme="https://henuajy.top/categories/Notes/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="Android" scheme="https://henuajy.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>广播接收器--发送自定义广播</title>
    <link href="https://henuajy.top/2019/05/15/%E5%B9%BF%E6%92%AD%E6%8E%A5%E6%94%B6%E5%99%A8-%E5%8F%91%E9%80%81%E8%87%AA%E5%AE%9A%E4%B9%89%E5%B9%BF%E6%92%AD/"/>
    <id>https://henuajy.top/2019/05/15/广播接收器-发送自定义广播/</id>
    <published>2019-05-14T23:20:37.000Z</published>
    <updated>2019-05-16T13:21:59.856Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、发送标准广播&quot;&gt;&lt;a href=&quot;#一、发送标准广播&quot; class=&quot;headerlink&quot; title=&quot;一、发送标准广播&quot;&gt;&lt;/a&gt;一、发送标准广播&lt;/h3&gt;&lt;p&gt;1、首先要定义一个广播接收器MyBroadcastReceiver，继承BroadcastReceiver&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;package&lt;/span&gt; com.henuajy.broadcasttest;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.BroadcastReceiver;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.Context;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.content.Intent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; android.widget.Toast;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyBroadcastReceiver&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;BroadcastReceiver&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onReceive&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(Context context, Intent intent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//收到广播后要执行的逻辑&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="Android" scheme="https://henuajy.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>广播接收器——接收系统广播</title>
    <link href="https://henuajy.top/2019/05/13/%E5%B9%BF%E6%92%AD%E6%8E%A5%E6%94%B6%E5%99%A8--%E6%8E%A5%E6%94%B6%E7%B3%BB%E7%BB%9F%E5%B9%BF%E6%92%AD/"/>
    <id>https://henuajy.top/2019/05/13/广播接收器--接收系统广播/</id>
    <published>2019-05-13T01:36:03.000Z</published>
    <updated>2019-05-16T13:22:02.430Z</updated>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、分类&quot;&gt;&lt;a href=&quot;#一、分类&quot; class=&quot;headerlink&quot; title=&quot;一、分类&quot;&gt;&lt;/a&gt;一、分类&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;标准广播&lt;/strong&gt;&lt;br&gt;是一种完全异步执行的广播，在广播发出后，所有的广播接收器几乎会在同一时刻接受到这条广播消息，没有任何顺序而言。这种广播效率比较高，但是无法被截断。&lt;br&gt;&lt;strong&gt;有序广播&lt;/strong&gt;&lt;br&gt;是一种同步执行的广播，在广播发出后，同一时刻只会有一个广播接收器能够收到这条广播消息，当这个广播接收器中的逻辑执行完毕后，广播才会继续传递。显而易见，这类广播是有先后顺序的，优先级高的广播接收器就可以先收到广播消息，并且前边的广播接收器可以截断正在传递的广播。
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="Android" scheme="https://henuajy.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>二叉树的层序遍历</title>
    <link href="https://henuajy.top/2019/05/12/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E5%B1%82%E5%BA%8F%E9%81%8D%E5%8E%86/"/>
    <id>https://henuajy.top/2019/05/12/二叉树的层序遍历/</id>
    <published>2019-05-12T05:15:39.000Z</published>
    <updated>2019-05-16T08:13:06.076Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;二叉树的层序遍历&quot;&gt;&lt;a href=&quot;#二叉树的层序遍历&quot; class=&quot;headerlink&quot; title=&quot;二叉树的层序遍历&quot;&gt;&lt;/a&gt;二叉树的层序遍历&lt;/h2&gt;&lt;p&gt;再网上搜索到的结果好多都是队列+while循环实现的，这里将while循环替换为递归。&lt;/p&gt;
&lt;h3 id=&quot;层序遍历&quot;&gt;&lt;a href=&quot;#层序遍历&quot; class=&quot;headerlink&quot; title=&quot;层序遍历&quot;&gt;&lt;/a&gt;层序遍历&lt;/h3&gt;&lt;p&gt;规则是：若树为空，则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。如图：
    
    </summary>
    
      <category term="Test" scheme="https://henuajy.top/categories/Test/"/>
    
    
      <category term="数据结构" scheme="https://henuajy.top/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="C++" scheme="https://henuajy.top/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习之三层架构实例（三）</title>
    <link href="https://henuajy.top/2019/04/28/JavaWeb%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://henuajy.top/2019/04/28/JavaWeb学习之三层架构实例（三）/</id>
    <published>2019-04-28T07:37:00.000Z</published>
    <updated>2019-05-16T08:11:46.228Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;通过上一篇博客&lt;a href=&quot;https://henuajy.top/2019/04/27/JavaWeb%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%BA%8C%EF%BC%89/&quot;&gt;JavaWeb学习之三层架构实例（二）&lt;/a&gt;我们基本上已经实现了对学生信息列表的增删改查操作（UI除外），但是不难看出，代码冗余度太高了，尤其是&lt;strong&gt;StudentDao&lt;/strong&gt;这个类，其中的增删改查四个方法，同样都要连接数据库、获取statement等等。为此，我又对这个项目进行了有点点优化。&lt;/p&gt;
&lt;h2 id=&quot;优化日志&quot;&gt;&lt;a href=&quot;#优化日志&quot; class=&quot;headerlink&quot; title=&quot;优化日志&quot;&gt;&lt;/a&gt;优化日志&lt;/h2&gt;&lt;p&gt;1、增加了两个接口 &lt;strong&gt;IStudentDao.java&lt;/strong&gt; 、 &lt;strong&gt;IStudentService.java&lt;/strong&gt; ；&lt;br&gt;2、 &lt;strong&gt;StudentDao.java&lt;/strong&gt; 和 &lt;strong&gt;StudentService.java&lt;/strong&gt; 分别实现以上两个接口，并加入Impl后缀；&lt;br&gt;3、 增加一个数据库帮助类 &lt;strong&gt;DBUtil.java&lt;/strong&gt;，目的是简化Dao层代码量；
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="JavaWeb" scheme="https://henuajy.top/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习之三层架构实例（二）</title>
    <link href="https://henuajy.top/2019/04/27/JavaWeb%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://henuajy.top/2019/04/27/JavaWeb学习之三层架构实例（二）/</id>
    <published>2019-04-27T15:36:09.000Z</published>
    <updated>2019-05-16T07:57:39.549Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;引言&quot;&gt;&lt;a href=&quot;#引言&quot; class=&quot;headerlink&quot; title=&quot;引言&quot;&gt;&lt;/a&gt;引言&lt;/h2&gt;&lt;p&gt;这个实例是上一个实例&lt;a href=&quot;https://henuajy.top/2019/04/25/JavaWeb%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%B8%80%EF%BC%89/&quot;&gt;JavaWeb学习 三层架构实例（一）&lt;/a&gt;的加强版，实现的是在前端对数据库中student表的 &lt;em&gt;增&lt;/em&gt;、&lt;em&gt;删&lt;/em&gt;、&lt;em&gt;改&lt;/em&gt;、&lt;em&gt;查&lt;/em&gt; 操作。关于三层组成云云，这里就不再叙述。&lt;/p&gt;
&lt;h2 id=&quot;实例&quot;&gt;&lt;a href=&quot;#实例&quot; class=&quot;headerlink&quot; title=&quot;实例&quot;&gt;&lt;/a&gt;实例&lt;/h2&gt;&lt;h4 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h4&gt;&lt;p&gt;先来看一下主页，将student表中的数据列出来，这里隐藏了地址信息（saddress）。
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="JavaWeb" scheme="https://henuajy.top/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习之三层架构实例（一）</title>
    <link href="https://henuajy.top/2019/04/25/JavaWeb%E5%AD%A6%E4%B9%A0%E4%B9%8B%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E5%AE%9E%E4%BE%8B%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://henuajy.top/2019/04/25/JavaWeb学习之三层架构实例（一）/</id>
    <published>2019-04-25T13:59:59.000Z</published>
    <updated>2019-05-16T07:51:28.232Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、三层组成&quot;&gt;&lt;a href=&quot;#一、三层组成&quot; class=&quot;headerlink&quot; title=&quot;一、三层组成&quot;&gt;&lt;/a&gt;一、三层组成&lt;/h2&gt;&lt;p&gt;A.表示层（也称视图层）&lt;br&gt;前台对应于MVC中的View;后台对应于MVC中的Controller，用于控制跳转、调用业务逻辑层Servlet;&lt;br&gt;B.业务逻辑层(Service层)&lt;br&gt;接受表示层的请求;组装数据访问层,进行的操作是逻辑性的&lt;br&gt;C.数据访问层(Dao层)&lt;br&gt;直接访问数据库的操作,原子性的操作(增删改查);
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="JavaWeb" scheme="https://henuajy.top/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>JavaWeb学习 MVC模式登录实例</title>
    <link href="https://henuajy.top/2019/04/25/%E5%9F%BA%E4%BA%8EServlet%E7%9A%84MVC%E6%A8%A1%E5%BC%8F%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%AE%9E%E4%BE%8B/"/>
    <id>https://henuajy.top/2019/04/25/基于Servlet的MVC模式用户登录实例/</id>
    <published>2019-04-25T13:56:35.000Z</published>
    <updated>2019-05-16T07:46:05.868Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、关于MVC模式的简单解释&quot;&gt;&lt;a href=&quot;#一、关于MVC模式的简单解释&quot; class=&quot;headerlink&quot; title=&quot;一、关于MVC模式的简单解释&quot;&gt;&lt;/a&gt;一、关于MVC模式的简单解释&lt;/h2&gt;&lt;p&gt;M    Model，模型层，例如登录实例中，用于处理登录操作的类；&lt;br&gt;V    View，视图层，用于展示以及与用户交互。使用html、js、css、jsp、jQuery等前端技术实现；&lt;br&gt;C    Controller，控制器，接受视图层的请求，将请求跳转到对应的模型进行处理，模型层处理完毕后，再将结果返回给请求处。这里用Servlet实现控制器。&lt;br&gt;
    
    </summary>
    
      <category term="Demo" scheme="https://henuajy.top/categories/Demo/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="JavaWeb" scheme="https://henuajy.top/tags/JavaWeb/"/>
    
  </entry>
  
  <entry>
    <title>使用BottomNavigationView横屏时返回主页</title>
    <link href="https://henuajy.top/2019/04/25/%E4%BD%BF%E7%94%A8BottomNavigationView%E6%A8%AA%E5%B1%8F%E6%97%B6%E8%BF%94%E5%9B%9E%E4%B8%BB%E9%A1%B5/"/>
    <id>https://henuajy.top/2019/04/25/使用BottomNavigationView横屏时返回主页/</id>
    <published>2019-04-25T13:43:25.000Z</published>
    <updated>2019-05-16T07:43:22.172Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、问题导入&quot;&gt;&lt;a href=&quot;#一、问题导入&quot; class=&quot;headerlink&quot; title=&quot;一、问题导入&quot;&gt;&lt;/a&gt;一、问题导入&lt;/h2&gt;&lt;p&gt;如图，“发现”页即为主页，然后我们切换到“我”页，一切正常。
    
    </summary>
    
      <category term="BUG" scheme="https://henuajy.top/categories/BUG/"/>
    
    
      <category term="Java" scheme="https://henuajy.top/tags/Java/"/>
    
      <category term="Android" scheme="https://henuajy.top/tags/Android/"/>
    
  </entry>
  
</feed>
